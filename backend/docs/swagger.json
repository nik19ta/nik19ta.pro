{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/sign-in": {
            "post": {
                "description": "Log in to the admin panel, get a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SingUpResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "description": "get all project categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "language (English by default)",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/projects.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/links/to": {
            "get": {
                "description": "Link redirect ( for stat )",
                "tags": [
                    "Links"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "the link to which the redirect will be made",
                        "name": "link",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the page from which the link was clicked",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/projects": {
            "get": {
                "description": "Get list Projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projects.ProjectsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/projects/{id}": {
            "get": {
                "description": "Get information about the project by its ID and language, if specified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project language (English by default)",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projects.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/stat/links": {
            "get": {
                "description": "Get links statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stat"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/links.Link"
                            }
                        }
                    }
                }
            }
        },
        "/api/stat/update/visit": {
            "put": {
                "description": "add a visit to the site, gets the IP, country, time of entry and uniqueness of the visit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stat"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique visit or not (0 - not unique, 1 - unique)",
                        "name": "un",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UTM tag ID (optional parameter)",
                        "name": "utm",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "URL Page",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Title Page",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session (if user yet visited website)",
                        "name": "session",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration of the session and return of the session ID",
                        "schema": {
                            "$ref": "#/definitions/stat.SessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/stat/updatevisit/extend": {
            "put": {
                "description": "Extends the time spent on the site by session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/stat/visits": {
            "get": {
                "description": "Get information about site visits, including the number of visits, unique visits, top countries, top browsers and top OS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stat"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stat.VisitsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.SingUpResp": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "token for authorization",
                    "type": "string"
                }
            }
        },
        "links.Link": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "projects.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "projects.ProjectResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "description": "Project's card",
                    "type": "string"
                },
                "categories": {
                    "description": "Category ids",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "description": {
                    "description": "Project's description",
                    "type": "string"
                },
                "features": {
                    "description": "Project's features",
                    "type": "string"
                },
                "id": {
                    "description": "Project's id",
                    "type": "string"
                },
                "photos": {
                    "description": "Project's photos",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "subtitle": {
                    "description": "Project's subtitle",
                    "type": "string"
                },
                "title": {
                    "description": "Project's title",
                    "type": "string"
                },
                "url": {
                    "description": "url preview",
                    "type": "string"
                }
            }
        },
        "projects.ProjectsResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/projects.ProjectsResponse"
                    }
                }
            }
        },
        "projects.ProjectsResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "description": "Category ids",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "id": {
                    "description": "Project's id",
                    "type": "string"
                },
                "subtitle": {
                    "description": "Project's subtitle",
                    "type": "string"
                },
                "title": {
                    "description": "Project's title",
                    "type": "string"
                },
                "url": {
                    "description": "Url preview",
                    "type": "string"
                }
            }
        },
        "stat.Bot": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.Entry"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "stat.BrowserCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "stat.DateCountPair": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "stat.Entry": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "value",
                    "type": "integer"
                },
                "name": {
                    "description": "key",
                    "type": "string"
                }
            }
        },
        "stat.NameCountPair": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "stat.SessionResponse": {
            "type": "object",
            "properties": {
                "session": {
                    "type": "string"
                }
            }
        },
        "stat.SiteStats": {
            "type": "object",
            "properties": {
                "avg_duration": {
                    "type": "integer"
                },
                "first_visits": {
                    "type": "integer"
                },
                "top_browsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.BrowserCount"
                    }
                },
                "top_countries": {
                    "description": "Top countries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.NameCountPair"
                    }
                },
                "top_os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.NameCountPair"
                    }
                },
                "top_pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.URLCountPair"
                    }
                },
                "total_bots": {
                    "type": "integer"
                },
                "total_visits": {
                    "type": "integer"
                },
                "total_visits_bot": {
                    "description": "Total bots visit by days",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.Bot"
                    }
                },
                "visits_by_day": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stat.DateCountPair"
                    }
                }
            }
        },
        "stat.URLCountPair": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stat.VisitsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/stat.SiteStats"
                }
            }
        }
    }
}